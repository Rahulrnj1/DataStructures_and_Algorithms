https://practice.geeksforgeeks.org/problems/subset-sum-problem/0

Aditya verma: https://www.youtube.com/watch?v=UmMh7xp07kY&list=PL_z_8CaSLPWekqhdCPmFohncHwz8TY2Go&index=8

import java.util. * ;
import java.lang. * ;
import java.io. * ;
class GFG {

	public static boolean subsetSum(int n, int sum, int[] arr) {
		boolean dp[][] = new boolean[n][sum + 1];
		for (int i = 0; i <= sum; i++)
		dp[0][i] = false;
		for (int i = 0; i < n; i++)
		dp[i][0] = true;
		for (int i = 1; i < n; i++) {
			for (int j = 1; j <= sum; j++) {
				if (j < arr[i]) {
					dp[i][j] = dp[i - 1][j];
				}
				else {
					dp[i][j] = dp[i - 1][j] || dp[i - 1][j - arr[i]];
				}
			}
		}
		return dp[n - 1][sum];
	}
	public static void main(String[] args) {
		Scanner sc = new Scanner(System. in );
		int t = sc.nextInt();
		for (int i = 0; i < t; i++) {
			int n = sc.nextInt();
			int[] arr = new int[n];
			int sum = 0;
			for (int j = 0; j < n; j++) {
				arr[j] = sc.nextInt();
				sum = sum + arr[j];
			}
			if (sum % 2 != 0) {
				System.out.println("NO");
			}
			else {
				System.out.println(subsetSum(n, sum / 2, arr) == true ? "YES": "NO");
			}
		}
	}
}
