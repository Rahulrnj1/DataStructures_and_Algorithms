Aitya verma: https://www.youtube.com/watch?v=ot_XBHyqpFc&list=PL_z_8CaSLPWekqhdCPmFohncHwz8TY2Go&index=12

s1-s2 = diff;
s1+s2 = sum;
s1 = (diff+sum)/2;

//eclipse: inside amazon
package Practice;

import java.util.*;
import java.lang.*;
import java.io.*;

public class GFG2 {

	public static int countSubset(int n, int sum, int[] arr) {
		int dp[][] = new int[n + 1][sum + 1];
		for (int i = 0; i <= sum; i++) {
			dp[0][i] = 0;
		}
		for (int i = 0; i <= n; i++) {
			dp[i][0] = 1;
		}
		for (int i = 1; i <= n; i++) {
			for (int j = 1; j <= sum; j++) {
				if (j < arr[i - 1]) {
					dp[i][j] = dp[i - 1][j];
				} else {
					dp[i][j] = dp[i - 1][j] + dp[i - 1][j - arr[i - 1]];
				}
			}
		}
		return dp[n][sum];
	}

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int t = sc.nextInt();
		for (int i = 0; i < t; i++) {
			int n = sc.nextInt();
			int[] arr = new int[n];
			int sum = 0;
			for (int j = 0; j < n; j++) {
				arr[j] = sc.nextInt();
				sum += arr[j];
			}
			int diff = sc.nextInt();
			System.out.println(countSubset(n, (diff + sum) / 2, arr));

		}
	}
}
