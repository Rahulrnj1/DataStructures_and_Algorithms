https://www.interviewbit.com/problems/pascal-triangle/

/*
Given numRows, generate the first numRows of Pascal’s triangle.
Pascal’s triangle : To generate A[C] in row R, sum up A’[C] and A’[C-1] from previous row R - 1.

Example:
Given numRows = 5,
Return
[
     [1],
     [1,1],
     [1,2,1],
     [1,3,3,1],
     [1,4,6,4,1]
]
*/

public class Solution {
 public ArrayList < ArrayList < Integer >> solve(int A) {
  ArrayList < ArrayList < Integer >> res = new ArrayList < ArrayList < Integer >> ();
  if (A == 0)
   return res;
  if (A == 1) {
   res.add(new ArrayList < Integer > (Arrays.asList(1)));
   return res;
  }
  if (A == 2) {
   res.add(new ArrayList < Integer > (Arrays.asList(1)));
   res.add(new ArrayList < Integer > (Arrays.asList(1, 1)));
   return res;
  }
  res.add(new ArrayList < Integer > (Arrays.asList(1)));
  res.add(new ArrayList < Integer > (Arrays.asList(1, 1)));
  for (int i = 2; i < A; i++) {
   ArrayList < Integer > lastL = res.get(i - 1);
   ArrayList < Integer > currL = new ArrayList < Integer > ();
   currL.add(1);
   for (int j = 0; j < lastL.size() - 1; j++) {
    currL.add(lastL.get(j) + lastL.get(j + 1));
   }
   currL.add(1);
   res.add(currL);
  }
  return res;
 }
}
