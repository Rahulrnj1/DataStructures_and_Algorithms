https://www.interviewbit.com/problems/reverse-integer/

/*
Reverse digits of an integer.

Example1:

x = 123,
return 321

Example2:

x = -123,
return -321

Return 0 if the result overflows and does not fit in a 32 bit signed integer
*/

public class Solution {
    public int reverse(int num) {
        boolean negetiveFlag = false;
        if (num < 0) {
            negetiveFlag = true;
            num = -num;
        }
        int rev_num = 0, prev_num = 0;
        while (num != 0) {
            int curr_digit = num % 10;
            rev_num = rev_num * 10 + curr_digit;
            if ((rev_num - curr_digit) / 10 != prev_num)
                return 0;
            prev_num = rev_num;
            num = num / 10;
        }
        return (negetiveFlag == true) ? -rev_num : rev_num;
    }
}

class Solution {
    public int reverse(int x) {
        int rev = 0;
        while (x != 0) {
            int pop = x % 10;
            x = x/10;
            if (rev > Integer.MAX_VALUE/10 || (rev == Integer.MAX_VALUE / 10 && pop > 7)) 
              return 0;
            if (rev < Integer.MIN_VALUE/10 || (rev == Integer.MIN_VALUE / 10 && pop < -8)) 
              return 0;
            rev = rev * 10 + pop;
        }
        return rev;
    }
}
