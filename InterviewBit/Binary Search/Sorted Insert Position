https://www.interviewbit.com/problems/sorted-insert-position/

/*
Given a sorted array and a target value, return the index if the target is found. 
If not, return the index where it would be if it were inserted in order.

You may assume no duplicates in the array.

Here are few examples.

[1,3,5,6], 5 → 2
[1,3,5,6], 2 → 1
[1,3,5,6], 7 → 4
[1,3,5,6], 0 → 0
*/

public class Solution {

    public static int search(ArrayList < Integer > a, int b, int start, int end) {
        if (start > end)
            return start;
        int mid = (start + end) / 2;
        if (a.get(mid) == b)
            return mid;
        else if (b < a.get(mid))
            return search(a, b, start, mid - 1);
        else
            return search(a, b, mid + 1, end);
    }
    public int searchInsert(ArrayList < Integer > a, int b) {
        return search(a, b, 0, a.size() - 1);
    }
}
