/*
Given a pattern and a string str, find if str follows the same pattern.
Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in str.

Example 1:
Input: pattern = "abba", str = "dog cat cat dog"
Output: true

Example 2:
Input:pattern = "abba", str = "dog cat cat fish"
Output: false

Example 3:
Input: pattern = "aaaa", str = "dog cat cat dog"
Output: false

Example 4:
Input: pattern = "abba", str = "dog dog dog dog"
Output: false

Notes:
You may assume pattern contains only lowercase letters, and str contains lowercase letters that may be separated by a single space.
*/

class Solution {
    public boolean wordPattern(String pattern, String str) {
        HashMap < Character, String > hm1 = new HashMap < Character, String > ();
        HashMap < String, Character > hm2 = new HashMap < String, Character > ();
        String[] s = str.split(" ");
        if (pattern.length() != s.length) {
            return false;
        }
        for (int i = 0; i < pattern.length(); i++) {
            if (hm1.containsKey(pattern.charAt(i)) && hm2.containsKey(s[i])) {
                if (!(hm1.get(pattern.charAt(i)).equals(s[i])) || !(hm2.get(s[i]) == pattern.charAt(i))) {
                    return false;
                }

            } else if ((!hm1.containsKey(pattern.charAt(i)) && !hm2.containsKey(s[i])) == false) {
                return false;
            } else {
                hm1.put(pattern.charAt(i), s[i]);
                hm2.put(s[i], pattern.charAt(i));
            }
        }
        return true;
    }
}
