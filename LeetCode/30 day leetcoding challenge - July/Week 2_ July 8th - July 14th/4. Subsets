Approach 3: Lexicographic (Binary Sorted) Subsets : https://leetcode.com/problems/subsets/solution/

/*
Given a set of distinct integers, nums, return all possible subsets (the power set).
Note: The solution set must not contain duplicate subsets.

Example:
Input: nums = [1,2,3]
Output:
[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]
*/

class Solution {
    public List < List < Integer >> subsets(int[] nums) {
        List < List < Integer >> result = new ArrayList();
        int n = nums.length;
        for (int i = (int) Math.pow(2, n); i < Math.pow(2, n + 1); i++) {
            String Bits = Integer.toBinaryString(i).substring(1);
            List < Integer > li = new ArrayList < Integer > ();

            for (int j = 0; j < Bits.length(); j++) {
                if (Bits.charAt(j) == '1') {
                    li.add(nums[j]);
                }
            }
            result.add(li);
        }
        return result;
    }
}
