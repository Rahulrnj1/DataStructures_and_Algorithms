https://www.youtube.com/watch?v=0y7pU6PPrc4

/*
All DNA is composed of a series of nucleotides abbreviated as 'A', 'C', 'G', and 'T', for example: "ACGAATTCCG". When studying DNA, it is sometimes useful to identify repeated sequences within the DNA.
Write a function to find all the 10-letter-long sequences (substrings) that occur more than once in a DNA molecule.

Example 1:
Input: s = "AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT"
Output: ["AAAAACCCCC","CCCCCAAAAA"]

Example 2:
Input: s = "AAAAAAAAAAAAA"
Output: ["AAAAAAAAAA"]

Constraints:
0 <= s.length <= 105
s[i] is 'A', 'C', 'G', or 'T'.
*/

class Solution {
    public List < String > findRepeatedDnaSequences(String s) {
        List < String > result = new ArrayList < > ();
        HashMap < String, Integer > hs = new HashMap < > ();
        int i = 0;
        while (i + 10 <= s.length()) {
            String subS = s.substring(i, i++ + 10);
            hs.put(subS, hs.getOrDefault(subS, 0) + 1);
            if (hs.get(subS) == 2)
                result.add(subS);
        }
        return result;
    }
}
