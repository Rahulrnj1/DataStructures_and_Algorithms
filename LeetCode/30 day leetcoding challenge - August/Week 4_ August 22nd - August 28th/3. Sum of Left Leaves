/*
Find the sum of all left leaves in a given binary tree.

Example:

    3
   / \
  9  20
    /  \
   15   7

There are two left leaves in the binary tree, with values 9 and 15 respectively. Return 24.
*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
*/

class Solution {
    int result = 0;
    public void traverse(TreeNode root, boolean flag) {
        if (root == null)
            return;
        if (flag == true && (root.left == null && root.right == null)) {
            result += root.val;
        }
        traverse(root.left, true);
        traverse(root.right, false);
    }
    public int sumOfLeftLeaves(TreeNode root) {
        traverse(root, false);
        return result;
    }
}
