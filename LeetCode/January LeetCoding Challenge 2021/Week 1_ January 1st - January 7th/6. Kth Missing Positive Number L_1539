https://leetcode.com/problems/kth-missing-positive-number/discuss/876751/Java-1-liner-O(n)-simplest-easy-to-understand-beats-100

/*
Given an array arr of positive integers sorted in a strictly increasing order, and an integer k.
Find the kth positive integer that is missing from this array.

Example 1:
Input: arr = [2,3,4,7,11], k = 5
Output: 9
Explanation: The missing positive integers are [1,5,6,8,9,10,12,13,...]. The 5th missing positive integer is 9.

Example 2:
Input: arr = [1,2,3,4], k = 2
Output: 6
Explanation: The missing positive integers are [5,6,7,...]. The 2nd missing positive integer is 6.

Constraints:
1 <= arr.length <= 1000
1 <= arr[i] <= 1000
1 <= k <= 1000
arr[i] < arr[j] for 1 <= i < j <= arr.length

Hint #1  
Keep track of how many positive numbers are missing as you scan the array.
*/

class Solution {
    public int findKthPositive(int[] arr, int k) {
        int prev = 0;
        int curr = arr[0];
        int prevcount = 0; //prev count of missing number
        int count = 0; //count of missing numbers
		
        for (int i = 1; i <= arr.length; i++) {
		
			//if there are missing numbers between elements, update count and previous count
            if (prev != curr - 1) {
                prevcount = count;
                count += curr - prev - 1;
				
				//if we reached to a point where count of missing numbers are >= k, calculate kth missing number and return
                if (count >= k) {
                    int index = k - prevcount;
                    return prev + index;
                }
            }
            prev = curr;
            if (i != arr.length)
                curr = arr[i];
        }
		
		//if nothing is returned yet, it means no number was missing yet, so we return arr length+k
        return arr.length + k;
    }
}


========================================================================================================================================

class Solution {
    public int findKthPositive(int[] arr, int k) {
        for(int i:arr){
          if(i<=k)
            k++;
          else break;
        }
      return k;
    }
}
