https://leetcode.com/problems/number-of-substrings-containing-all-three-characters/discuss/1142967/javascript-100-faster-three-pointers

/*
Given a string s consisting only of characters a, b and c.
Return the number of substrings containing at least one occurrence of all these characters a, b and c.

Example 1:
Input: s = "abcabc"
Output: 10
Explanation: The substrings containing at least one occurrence of the characters a, b and c are "abc", "abca", "abcab", "abcabc", "bca", "bcab", "bcabc", "cab", "cabc" and "abc" (again). 

Example 2:
Input: s = "aaacb"
Output: 3
Explanation: The substrings containing at least one occurrence of the characters a, b and c are "aaacb", "aacb" and "acb". 

Example 3:
Input: s = "abc"
Output: 1
 
Constraints:
3 <= s.length <= 5 x 10^4
s only consists of a, b or c characters.
*/

public class Solution {
    public int numberOfSubstrings(String s) {
        int a_index = -1, b_index = -1, c_index = -1, ans = 0;
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == 'a') {
                a_index = i;
                if (b_index != -1 && c_index != -1) {
                    ans += Math.min(b_index, c_index) + 1;
                }
            } else if (s.charAt(i) == 'b') {
                b_index = i;
                if (a_index != -1 && c_index != -1) {
                    ans += Math.min(a_index, c_index) + 1;
                }
            } else {
                c_index = i;
                if (b_index != -1 && a_index != -1) {
                    ans += Math.min(b_index, a_index) + 1;
                }
            }
        }
        return ans;
    }
}
