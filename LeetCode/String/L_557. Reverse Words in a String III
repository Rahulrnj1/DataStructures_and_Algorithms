/*
Given a string s, reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.

Example 1:
Input: s = "Let's take LeetCode contest"
Output: "s'teL ekat edoCteeL tsetnoc"

Example 2:
Input: s = "God Ding"
Output: "doG gniD"

Constraints:
1 <= s.length <= 5 * 104
s contains printable ASCII characters.
s does not contain any leading or trailing spaces.
There is at least one word in s.
All the words in s are separated by a single space.
*/

class Solution {
    public String reverseWords(String s) {
        int start=0;
        int end = s.indexOf(" ");
       
        while(true){
          System.out.println(start+" "+end);
          if (end==-1){
            end = s.length();
           s= reverse(s, start, end-1);
            return s;
          }
          s= reverse(s, start, end-1);
           start = end+1;
          end = s.indexOf(' ',start);
        }
    }
  
  public String reverse(String s , int i, int j){
    char[] ch = s.toCharArray();
    while(i<j){
      char temp = ch[i];
        ch[i] =  ch[j];
       ch[j] = temp;
      i++; j--;
    }
    return String.valueOf(ch);
  }
}
