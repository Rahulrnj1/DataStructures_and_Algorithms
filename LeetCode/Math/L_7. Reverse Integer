https://leetcode.com/problems/reverse-integer/discuss/4060/My-accepted-15-lines-of-code-for-Java

/*
Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.
Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

Example 1:
Input: x = 123
Output: 321

Example 2:
Input: x = -123
Output: -321

Example 3:
Input: x = 120
Output: 21

Example 4:
Input: x = 0
Output: 0
 
Constraints:
-231 <= x <= 231 - 1
*/

class Solution {
    public int reverse(int x) {
     if(x > Integer.MAX_VALUE || x < Integer.MIN_VALUE)
       return 0;
     boolean isNegetive = x < 0 ? true : false; 
     x = Math.abs(x);
     int n = 0;
      while(x>0){
        int temp = x%10;
        int num = n*10+temp;
        if((num-temp)/10 != n)
          return 0;
        n = num;
        x = x/10;
      }
      return isNegetive ? -n : n;
    }
}


=====================================

https://www.youtube.com/watch?v=CRgXG1vK-wg

class Solution {
    public int reverse(int x) {
        int reversed = 0;
        while(x!=0){
            int remainder = x%10;
            x=x/10;
            if(reversed > Integer.MAX_VALUE/10 || reversed == Integer.MAX_VALUE/100 && remainder>7)
                return 0;
            if(reversed < Integer.MIN_VALUE/10 || reversed == Integer.MIN_VALUE/100 && remainder<-8)
                return 0;
            reversed = reversed*10+remainder;
        }
        return reversed;
    }
}
