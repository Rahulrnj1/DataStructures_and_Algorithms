https://leetcode.com/contest/weekly-contest-291/problems/minimum-consecutive-cards-to-pick-up/

/*
You are given an integer array cards where cards[i] represents the value of the ith card. A pair of cards are matching if the cards have the same value.

Return the minimum number of consecutive cards you have to pick up to have a pair of matching cards among the picked cards. If it is impossible to have matching cards, return -1.

 

Example 1:

Input: cards = [3,4,2,3,4,7]
Output: 4
Explanation: We can pick up the cards [3,4,2,3] which contain a matching pair of cards with value 3. Note that picking up the cards [4,2,3,4] is also optimal.
Example 2:

Input: cards = [1,0,5,3]
Output: -1
Explanation: There is no way to pick up a set of consecutive cards that contain a pair of matching cards.
 

Constraints:

1 <= cards.length <= 105
0 <= cards[i] <= 106

*/

class Solution {
    public int minimumCardPickup(int[] cards) {
        HashMap<Integer, ArrayList<Integer>> hm = new HashMap<>();
        for(int i=0;i<cards.length;i++){
          ArrayList<Integer> li;
          if(hm.containsKey(cards[i])){
            li = hm.get(cards[i]);
          }
          else{
          li=new ArrayList();
          }
          li.add(i);
          hm.put(cards[i], li);
        }
        int res = Integer.MAX_VALUE;
        for(Map.Entry<Integer, ArrayList<Integer>> m : hm.entrySet()){
          ArrayList<Integer> li = m.getValue();
          for(int i = 1; i< li.size();i++){
            int val = li.get(i) - li.get(i-1);
            res = Math.min(res, val);
          }
        }
      return res == Integer.MAX_VALUE ? -1 : res+1;
    }
}
