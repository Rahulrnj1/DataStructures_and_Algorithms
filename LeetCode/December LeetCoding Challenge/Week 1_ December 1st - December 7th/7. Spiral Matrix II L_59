/*
Given a positive integer n, generate an n x n matrix filled with elements from 1 to n2 in spiral order. 

Example 1:
Input: n = 3
Output: [[1,2,3],[8,9,4],[7,6,5]]

Example 2:
Input: n = 1
Output: [[1]]

Constraints:
1 <= n <= 20
*/

class Solution {
    public int[][] generateMatrix(int n) {
        int res[][] = new int[n][n];
        int num = 1;
        int t = 0, l = 0, b = n - 1, r = n - 1;
        int dir = 0;
        while (t <= b && l <= r) {
            if (dir == 0) {
                for (int i = l; i <= r; i++) {
                    res[t][i] = num++;
                }
                t++;
            } else if (dir == 1) {
                for (int i = t; i <= b; i++) {
                    res[i][r] = num++;
                }
                r--;
            } else if (dir == 2) {
                for (int i = r; i >= l; i--) {
                    res[b][i] = num++;
                }
                b--;
            } else {
                for (int i = b; i >= t; i--) {
                    res[i][l] = num++;
                }
                l++;
            }
            dir = (dir + 1) % 4;
        }
        return res;
    }
}
