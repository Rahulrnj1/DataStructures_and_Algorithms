/*
Given a non-negative integer numRows, generate the first numRows of Pascal's triangle.
In Pascal's triangle, each number is the sum of the two numbers directly above it.

Example:
Input: 5
Output:
[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]
*/

class Solution {
    public List < List < Integer >> generate(int numRows) {
        List < List < Integer >> al = new ArrayList < List < Integer >> ();
        for (int i = 0; i < numRows; i++) {
            List < Integer > li = new ArrayList();
            for (int j = 0; j <= i; j++) {
                if (i == j || j == 0) {
                    li.add(1);
                } else {
                    li.add(al.get(i - 1).get(j - 1) + al.get(i - 1).get(j));
                }
            }
            al.add(li);
        }
        return al;
    }
}
