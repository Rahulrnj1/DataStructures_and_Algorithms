/*
Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.

Example 1:
Input: nums = [100,4,200,1,3,2]
Output: 4
Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.

Example 2:
Input: nums = [0,3,7,2,5,8,4,6,0,1]
Output: 9

Constraints:
0 <= nums.length <= 104
-109 <= nums[i] <= 109
 
Follow up: Could you implement the O(n) solution?
*/

class Solution {
    public int longestConsecutive(int[] nums) {
        if(nums.length==0)
          return 0;
        HashSet<Integer> hs = new HashSet<Integer>();
        for(int num: nums){
          hs.add(num);
        }
        int longestSteak=0;
        for(int num: hs){
          if(!hs.contains(num-1)){
            int currSteak=0;
            while(hs.contains(num++)){
              currSteak++;
            }          
            longestSteak = Math.max(longestSteak, currSteak);
          }
        }
      return longestSteak;
    }
}
